name: Playwright Tests
on:
  push:
    branches: [ trunk ]
  pull_request:

jobs:
  PlaywrightE2ETests:
    
    name: Playwright E2E tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - name: Setup node version and npm cache
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install Node dependencies
        run: npm ci

      - name: Build Assets
        run: FORCE_REDUCED_MOTION=true npm run build

      - name: blocks.ini setup
        run: |
          echo -e 'woocommerce_blocks_phase = 3\nwoocommerce_blocks_env = tests' > blocks.ini
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          coverage: none
          tools: composer

      - name: Composer install
        run: composer install

      - name: Install Playwright
        run: npx playwright install --with-deps


      - name: Run Playwright tests
        run: npm run test:e2e-pw

      - uses: actions/upload-artifact@v3
        if: ${{ failure() }}

        with:
          name: playwright-report
          path: artifacts/test-results
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`

      - name: Archive flaky tests report
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        if: always()
        with:
            name: flaky-tests-report
            path: flaky-tests
            if-no-files-found: ignore
  
  report-to-issues:
        name: Report to GitHub
        needs: [PlaywrightE2ETests]
        if: ${{ always() }}
        runs-on: ubuntu-latest
        steps:                
            # Checkout defaults to using the branch which triggered the event, which
            # isn't necessarily `trunk` (e.g. in the case of a merge).
            - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
              with:
                repository: 'wordpress/gutenberg'
                ref: trunk


            - uses: actions/download-artifact@v3
              id: download_artifact
              # Don't fail the job if there isn't any flaky tests report.
              continue-on-error: true
              with:
                  name: flaky-tests-report
                  path: flaky-tests


            - name: Setup Node.js and install dependencies
              if: ${{ steps.download_artifact.outcome == 'success' }}
              uses: ./.github/setup-node

            - name: Npm build
              if: ${{ steps.download_artifact.outcome == 'success' }}
              # TODO: We don't have to build the entire project, just the action itself.
              run: npm run build:packages

            - name: Report flaky tests
              if: ${{ steps.download_artifact.outcome == 'success' }}
              uses: ./packages/report-flaky-tests
              with:
                  repo-token: '${{ secrets.GITHUB_TOKEN }}'
                  label: 'type: flaky test'
                  artifact-path: flaky-tests

